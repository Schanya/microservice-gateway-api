# docker-compose.yml

version: '3.8'
services:
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    networks:
      - elastic

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    command: npm run docker:start:auth
    env_file:
      - ./apps/auth/.envDocker
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - elastic

  meetup:
    build:
      context: .
      dockerfile: ./apps/meetup/Dockerfile
    command:  npm run docker:start:meetup
    env_file:
      - ./apps/meetup/.envDocker
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - elastic

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    command: npm run start:dev gateway
    env_file:
      - ./apps/gateway/.envDocker
    depends_on:
      - meetup
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    networks:
      - elastic
      

  postgres:
    image: postgis/postgis:13-3.4
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=meetup_micro_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - elastic

  elasticsearch:
    image: elasticsearch:8.10.2
    ports:
      - 9200:9200
    environment:
      discovery.type: 'single-node'
      xpack.security.enabled: 'true'
      ELASTIC_PASSWORD: 'rxI2de2zHgnmKYkfToDh'
    networks:
      - elastic
    mem_limit: 1g
    cpus: '1'

  kibana:
    image: kibana:8.10.2
    environment:
     - ELASTICSEARCH_SERVICEACCOUNTTOKEN="AAEAAWVsYXN0aWMva2liYW5hL3Rva2VuMTpVQUdjNTJxdVFkQ00tQjFtWG0xTWl3"
    ports:
      - 5601:5601
    networks:
      - elastic
    mem_limit: 1g
    cpus: '1'
            

volumes:
  postgres:

networks:
  elastic:
  
 
