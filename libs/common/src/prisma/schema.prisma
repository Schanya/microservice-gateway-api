// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "./../../../../node_modules/.prisma/client"
  binaryTargets = ["native", "linux-arm64-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  USER
  ADMIN
}

model Users {
  id       Int     @id @unique @default(autoincrement())
  login    String
  email    String  @unique
  password String?

  role           Roles            @default(USER)
  tokens         Tokens[]
  MeetupsToUsers MeetupsToUsers[]
  Meetups        Meetups[]
}

model Tokens {
  id           Int    @id @unique @default(autoincrement())
  refreshToken String

  user   Users @relation(fields: [userId], references: [id])
  userId Int
}

model Meetups {
  id          Int    @id @unique @default(autoincrement())
  title       String
  description String
  date        String
  place       String
  organizerId Int

  tags      MeetupsToTags[]
  organizer Users            @relation(fields: [organizerId], references: [id])
  members   MeetupsToUsers[]
}

model Tags {
  id      Int             @id @unique @default(autoincrement())
  title   String          @unique
  meetups MeetupsToTags[]
}

model MeetupsToTags {
  id Int @id @unique @default(autoincrement())

  meetup   Meetups @relation(fields: [meetupId], references: [id])
  meetupId Int

  tag   Tags @relation(fields: [tagId], references: [id])
  tagId Int
}

model MeetupsToUsers {
  id Int @id @unique @default(autoincrement())

  meetup   Meetups @relation(fields: [meetupId], references: [id])
  meetupId Int

  user   Users @relation(fields: [userId], references: [id])
  userId Int
}
